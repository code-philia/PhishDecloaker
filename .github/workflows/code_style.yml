name: Code Style Checks

on:
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/code_style.yml'
      - 'phishdecloaker/**'
  pull_request:
    branches: [ main ]
    paths:
      - '.github/workflows/code_style.yml'
      - 'phishdecloaker/**'

jobs:
  lint-format-test:
    defaults:
      run:
        shell: bash -l {0} # for running conda activate 
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project:
          - phishdecloaker/captcha_detector
          - phishdecloaker/captcha_solvers/hcaptcha_solver_v3
          - phishdecloaker/captcha_solvers/recaptchav2_solver_v3
          # - phishdecloaker/captcha_solvers/rotation_solver # Uncomment this line for env conflict
          - phishdecloaker/captcha_solvers/slider_solver
          - phishdecloaker/controller
          - phishdecloaker/crawler
          - phishdecloaker/filter
          - phishdecloaker/phishing_detector
          - phishdecloaker/poller
    name: Lint for ${{ matrix.project }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: "3.10"

      - name: Cache Conda packages
        uses: actions/cache@v3
        with:
          path: ~/miniconda/pkgs
          key: ${{ runner.os }}-conda-${{ hashFiles(format('{0}/environment.yml', matrix.project)) }}
          restore-keys: |
            ${{ runner.os }}-conda-

      - name: Create or Update Conda Environment
        run: |
          env_file="${{ matrix.project }}/environment.yml"
          project_name=$(basename "${{ matrix.project }}")
          env_name="${project_name}_env"

          # 创建或更新 Conda 环境
          conda env create -f "$env_file" -n "$env_name" || conda env update -f "$env_file" -n "$env_name"

          # 激活环境
          conda activate "$env_name"

          # 安装代码质量检查工具（如果未包含在 environment.yml 中）
          pip install black flake8 mypy bandit vulture pytest

      - name: Run black
        run: |
          project_dir="${{ matrix.project }}"
          project_name=$(basename "$project_dir")
          env_name="${project_name}_env"

          # 激活环境
          conda activate "$env_name"

          # 运行代码质量检查
          black --check "$project_dir" || true

      - name: Run flake8
        run: |
          project_dir="${{ matrix.project }}"
          project_name=$(basename "$project_dir")
          env_name="${project_name}_env"

          # 激活环境
          conda activate "$env_name"

          # 运行代码质量检查
          flake8 "$project_dir" || true

      - name: Run mypy
        run: |
          project_dir="${{ matrix.project }}"
          project_name=$(basename "$project_dir")
          env_name="${project_name}_env"

          # 激活环境
          conda activate "$env_name"

          # 运行代码质量检查
          mypy "$project_dir" --explicit-package-bases || true

      - name: Run bandit
        run: |
          project_dir="${{ matrix.project }}"
          project_name=$(basename "$project_dir")
          env_name="${project_name}_env"

          # 激活环境
          conda activate "$env_name"

          # 运行代码质量检查
          bandit -r "$project_dir" || true

      - name: Run vulture
        run: |
          project_dir="${{ matrix.project }}"
          project_name=$(basename "$project_dir")
          env_name="${project_name}_env"

          # 激活环境
          conda activate "$env_name"

          # 运行代码质量检查
          vulture "$project_dir" || true
